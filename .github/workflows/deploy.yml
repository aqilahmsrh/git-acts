name: Deploy to Lambda

on: 
  push:
    branches: 
      - main
      - develop
      - staging
      - Pre-production
      - DEV

  pull_request: 
    branches: 
      - main
      - develop
      - staging
      - Pre-production
      - DEV

  workflow_dispatch:
    inputs:
      approve-deployment:
        description: 'Approve deployment'
        required: true
        default: 'false'

jobs:
  Deploy_to_Lambda_Function:
    runs-on: ubuntu-latest
    if: github.event.inputs.approve-deployment == 'true'

    steps:
        - name: 'Configure AWS Credentials'
          uses: aws-actions/configure-aws-credentials@v1-node16
          with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION }}
              
        - name: Deploy to Lambda Function
          run: |
              aws lambda update-function-code --function-name ${{ secrets.AWS_LAMBDA_NAME }} --s3-bucket ${{ secrets.AWS_S3_BUCKET_NAME }} --s3-key build.zip
        
  DeployDev:
    name: Deploy to DEV Environment
    if: github.event_name == success()
    needs: Deploy_to_Lambda_Function
    runs-on: ubuntu-latest
    environment:
      name: DEV
      url: "http://dev.Reach.com"
    steps:
      - name: Deploy
        run: echo "Deploying to DEV Environment"
        #This is where the deployment phase should be coded

  DeploySIT:
    name: Deploy to SIT Environment
    if: github.event.ref == 'refs/heads/DEV'
    needs: Deploy_to_Lambda_Function
    runs-on: ubuntu-latest
    environment:
      name: develop
      url: "http://SIT.Reach.com"
    steps:
      - name: Deploy
        run: echo "Deploying to SIT Environment"
        #This is where the deployment phase should be coded

  DeployStaging:
    name: Deploy to Staging Environment
    if: github.event.ref == 'refs/heads/DEV'
    needs: [DeploySIT]
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: "http://Staging.Reach.com"
    steps:
      - name: Deploy
        run: echo "Deploying to Staging Environment"
        #This is where the deployment phase should be coded

  DeployPre-prodution:
    name: Deploy to Pre-prod Environment
    if: github.event.ref == 'refs/heads/DEV'
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: Pre-production
      url: "http://Pre-prod.Reach.com"
    steps:
      - name: Deploy
        run: echo "Deploying to Pre-prod Environment"
        #This is where the deployment phase should be coded\
      
  DeployMaster:
    name: Deploy to Master Environment
    if: github.event.ref == 'refs/heads/DEV'
    needs: [DeployPre-prodution]
    runs-on: ubuntu-latest
    environment:
      name: master
      url: "http://www.Reach.com"
    steps:
      - name: Deploy
        run: echo "Deploying to Production Environment"


#   workflow_run:
#     workflows: ["Build"]
#     types:
#       - completed
          
#       - name: Delay before approval
#         run: sleep 3600

#       - name: Continue workflow after delay
#         if: ${{ github.event.inputs.approve-deployment == 'true' }}
#         run: |
#           # Add your deployment steps here
#           echo "Deployment approved and executed."
      
      
#       - name: Download Zip File from S3
#         run: |
#           aws s3 cp s3://${{ secrets.AWS_S3_BUCKET_NAME }}/${{ github.event.workflow_run.outputs.build }} ./build.zip

          
# aws lambda update-function-code --function-name ${{ secrets.AWS_LAMBDA_NAME }} --zip-file fileb://build.zip
            
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
#           command: aws lambda update-function-code
#           function-name: ${{ secrets.AWS_LAMBDA_NAME }}
#           zip-file: ./latest-build.zip
