name: Build

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install
      
      - name: AWS Test Configuration
        if: ${{ success() }}
        id: check2
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build Zip File
        run: |
          # Set a unique identifier for the zip file
          ZIP_NAME=$(date +%Y%m%d%H%M%S).zip

          # Create the zip file with the unique name
          # zip -r $ZIP_NAME ./src
          zip -r $ZIP_NAME ./

          # Export the zip file name as an output variable
          echo "::set-output name=build::$ZIP_NAME"

      - name: Upload Zip File to S3
        uses: aws-actions/aws-cli@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          command: s3 cp ${{ steps.build.outputs.build }} s3://bucket-test-777/
      
      - name: 'Create Artifacts'
        id: 'create_artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: 'latest-build'
          path: ${{ github.workspace }}/${{ steps.build.outputs.build }}

#       - name: Deploy to Lambda Function
#         uses: aws-actions/aws-cli@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
#           command: lambda update-function-code
#           function-name: ${{ secrets.AWS_LAMBDA_NAME }}
#           s3-bucket: ${{ secrets.AWS_S3_BUCKET_NAME }}
#           s3-key: ${{ steps.build.outputs.build }}
